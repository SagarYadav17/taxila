services:
  web:
    build:
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - pgbouncer
    labels:
      - "traefik.enable=true" # Enable Traefik for this service
      - "traefik.http.routers.django.rule=Host(`cms.taxilastone.com`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=myresolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    environment:
      - REDIS_HOST=redis
      - DB_HOSTNAME=pgbouncer
      - DB_PORT=6432

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - ./data/redisdata:/data

  pgbouncer:
    image: bitnami/pgbouncer:latest
    restart: always
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_USERNAME=postgres

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data

  traefik:
    image: traefik:latest
    restart: always
    command:
      - "--configFile=/etc/traefeik/traefik.yml" # Path to your traefik.yml file
    ports:
      - "80:80" # Expose port 80 for HTTP challenges
      - "443:443" # Expose port 443 for HTTPS traffic
      # - "8080:8080" # Expose Traefik dashboard on port 8080
    volumes:
      - "./traefik.yml:/etc/traefik/traefik.yml:ro" # Mount the traefik.yml file
      - "./data/letsencrypt:/etc/letsencrypt" # Mount the Let's Encrypt certificates directory
      - "/var/run/docker.sock:/var/run/docker.sock" # Mount Docker socket for communication with Docker API
      - "/var/log/traefik:/var/log/traefik" # Mount the log directory
    depends_on:
      - web
